// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chatbothub.proto

package chatbothub

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventRequest struct {
	EventType            string   `protobuf:"bytes,1,opt,name=eventType,proto3" json:"eventType,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	ClientId             string   `protobuf:"bytes,3,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientType           string   `protobuf:"bytes,4,opt,name=clientType,proto3" json:"clientType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1f640cec0d9d68, []int{0}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *EventRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *EventRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *EventRequest) GetClientType() string {
	if m != nil {
		return m.ClientType
	}
	return ""
}

type EventReply struct {
	EventType            string   `protobuf:"bytes,1,opt,name=eventType,proto3" json:"eventType,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	ClientId             string   `protobuf:"bytes,3,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientType           string   `protobuf:"bytes,4,opt,name=clientType,proto3" json:"clientType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventReply) Reset()         { *m = EventReply{} }
func (m *EventReply) String() string { return proto.CompactTextString(m) }
func (*EventReply) ProtoMessage()    {}
func (*EventReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1f640cec0d9d68, []int{1}
}

func (m *EventReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventReply.Unmarshal(m, b)
}
func (m *EventReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventReply.Marshal(b, m, deterministic)
}
func (m *EventReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventReply.Merge(m, src)
}
func (m *EventReply) XXX_Size() int {
	return xxx_messageInfo_EventReply.Size(m)
}
func (m *EventReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EventReply.DiscardUnknown(m)
}

var xxx_messageInfo_EventReply proto.InternalMessageInfo

func (m *EventReply) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *EventReply) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *EventReply) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *EventReply) GetClientType() string {
	if m != nil {
		return m.ClientType
	}
	return ""
}

type BotsRequest struct {
	Logins               []string `protobuf:"bytes,1,rep,name=logins,proto3" json:"logins,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BotsRequest) Reset()         { *m = BotsRequest{} }
func (m *BotsRequest) String() string { return proto.CompactTextString(m) }
func (*BotsRequest) ProtoMessage()    {}
func (*BotsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1f640cec0d9d68, []int{2}
}

func (m *BotsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BotsRequest.Unmarshal(m, b)
}
func (m *BotsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BotsRequest.Marshal(b, m, deterministic)
}
func (m *BotsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotsRequest.Merge(m, src)
}
func (m *BotsRequest) XXX_Size() int {
	return xxx_messageInfo_BotsRequest.Size(m)
}
func (m *BotsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BotsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BotsRequest proto.InternalMessageInfo

func (m *BotsRequest) GetLogins() []string {
	if m != nil {
		return m.Logins
	}
	return nil
}

type BotsReply struct {
	BotsInfo             []*BotsInfo `protobuf:"bytes,1,rep,name=botsInfo,proto3" json:"botsInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BotsReply) Reset()         { *m = BotsReply{} }
func (m *BotsReply) String() string { return proto.CompactTextString(m) }
func (*BotsReply) ProtoMessage()    {}
func (*BotsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1f640cec0d9d68, []int{3}
}

func (m *BotsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BotsReply.Unmarshal(m, b)
}
func (m *BotsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BotsReply.Marshal(b, m, deterministic)
}
func (m *BotsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotsReply.Merge(m, src)
}
func (m *BotsReply) XXX_Size() int {
	return xxx_messageInfo_BotsReply.Size(m)
}
func (m *BotsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BotsReply.DiscardUnknown(m)
}

var xxx_messageInfo_BotsReply proto.InternalMessageInfo

func (m *BotsReply) GetBotsInfo() []*BotsInfo {
	if m != nil {
		return m.BotsInfo
	}
	return nil
}

type BotsInfo struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientType           string   `protobuf:"bytes,2,opt,name=clientType,proto3" json:"clientType,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StartAt              int64    `protobuf:"varint,4,opt,name=startAt,proto3" json:"startAt,omitempty"`
	LastPing             int64    `protobuf:"varint,5,opt,name=lastPing,proto3" json:"lastPing,omitempty"`
	Login                string   `protobuf:"bytes,6,opt,name=login,proto3" json:"login,omitempty"`
	LoginInfo            string   `protobuf:"bytes,7,opt,name=loginInfo,proto3" json:"loginInfo,omitempty"`
	Status               int32    `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	FilterInfo           string   `protobuf:"bytes,9,opt,name=filterInfo,proto3" json:"filterInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BotsInfo) Reset()         { *m = BotsInfo{} }
func (m *BotsInfo) String() string { return proto.CompactTextString(m) }
func (*BotsInfo) ProtoMessage()    {}
func (*BotsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1f640cec0d9d68, []int{4}
}

func (m *BotsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BotsInfo.Unmarshal(m, b)
}
func (m *BotsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BotsInfo.Marshal(b, m, deterministic)
}
func (m *BotsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotsInfo.Merge(m, src)
}
func (m *BotsInfo) XXX_Size() int {
	return xxx_messageInfo_BotsInfo.Size(m)
}
func (m *BotsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BotsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BotsInfo proto.InternalMessageInfo

func (m *BotsInfo) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *BotsInfo) GetClientType() string {
	if m != nil {
		return m.ClientType
	}
	return ""
}

func (m *BotsInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BotsInfo) GetStartAt() int64 {
	if m != nil {
		return m.StartAt
	}
	return 0
}

func (m *BotsInfo) GetLastPing() int64 {
	if m != nil {
		return m.LastPing
	}
	return 0
}

func (m *BotsInfo) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *BotsInfo) GetLoginInfo() string {
	if m != nil {
		return m.LoginInfo
	}
	return ""
}

func (m *BotsInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *BotsInfo) GetFilterInfo() string {
	if m != nil {
		return m.FilterInfo
	}
	return ""
}

type LoginBotRequest struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientType           string   `protobuf:"bytes,2,opt,name=clientType,proto3" json:"clientType,omitempty"`
	Login                string   `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	NotifyUrl            string   `protobuf:"bytes,5,opt,name=notifyUrl,proto3" json:"notifyUrl,omitempty"`
	LoginInfo            string   `protobuf:"bytes,6,opt,name=loginInfo,proto3" json:"loginInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginBotRequest) Reset()         { *m = LoginBotRequest{} }
func (m *LoginBotRequest) String() string { return proto.CompactTextString(m) }
func (*LoginBotRequest) ProtoMessage()    {}
func (*LoginBotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1f640cec0d9d68, []int{5}
}

func (m *LoginBotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginBotRequest.Unmarshal(m, b)
}
func (m *LoginBotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginBotRequest.Marshal(b, m, deterministic)
}
func (m *LoginBotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginBotRequest.Merge(m, src)
}
func (m *LoginBotRequest) XXX_Size() int {
	return xxx_messageInfo_LoginBotRequest.Size(m)
}
func (m *LoginBotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginBotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginBotRequest proto.InternalMessageInfo

func (m *LoginBotRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *LoginBotRequest) GetClientType() string {
	if m != nil {
		return m.ClientType
	}
	return ""
}

func (m *LoginBotRequest) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *LoginBotRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginBotRequest) GetNotifyUrl() string {
	if m != nil {
		return m.NotifyUrl
	}
	return ""
}

func (m *LoginBotRequest) GetLoginInfo() string {
	if m != nil {
		return m.LoginInfo
	}
	return ""
}

type LoginBotReply struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginBotReply) Reset()         { *m = LoginBotReply{} }
func (m *LoginBotReply) String() string { return proto.CompactTextString(m) }
func (*LoginBotReply) ProtoMessage()    {}
func (*LoginBotReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b1f640cec0d9d68, []int{6}
}

func (m *LoginBotReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginBotReply.Unmarshal(m, b)
}
func (m *LoginBotReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginBotReply.Marshal(b, m, deterministic)
}
func (m *LoginBotReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginBotReply.Merge(m, src)
}
func (m *LoginBotReply) XXX_Size() int {
	return xxx_messageInfo_LoginBotReply.Size(m)
}
func (m *LoginBotReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginBotReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoginBotReply proto.InternalMessageInfo

func (m *LoginBotReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*EventRequest)(nil), "chatbothub.EventRequest")
	proto.RegisterType((*EventReply)(nil), "chatbothub.EventReply")
	proto.RegisterType((*BotsRequest)(nil), "chatbothub.BotsRequest")
	proto.RegisterType((*BotsReply)(nil), "chatbothub.BotsReply")
	proto.RegisterType((*BotsInfo)(nil), "chatbothub.BotsInfo")
	proto.RegisterType((*LoginBotRequest)(nil), "chatbothub.LoginBotRequest")
	proto.RegisterType((*LoginBotReply)(nil), "chatbothub.LoginBotReply")
}

func init() { proto.RegisterFile("chatbothub.proto", fileDescriptor_0b1f640cec0d9d68) }

var fileDescriptor_0b1f640cec0d9d68 = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x66, 0x9b, 0x26, 0xb1, 0x27, 0xa0, 0x56, 0xab, 0x52, 0x96, 0x14, 0xa1, 0x60, 0x09, 0x29,
	0xa7, 0x28, 0x2a, 0x47, 0xc4, 0x01, 0x43, 0x05, 0x95, 0x38, 0x44, 0x56, 0x79, 0x00, 0xbb, 0xd9,
	0xc4, 0x16, 0xee, 0xae, 0xf1, 0x8e, 0x89, 0x8c, 0x78, 0x33, 0xde, 0x83, 0xa7, 0xe1, 0x80, 0x76,
	0xfc, 0xdb, 0x50, 0x71, 0x41, 0xea, 0x6d, 0xbe, 0x6f, 0xc6, 0xb3, 0xdf, 0x37, 0x3b, 0x5e, 0x38,
	0xbe, 0x8e, 0x43, 0x8c, 0x34, 0xc6, 0x45, 0xb4, 0xc8, 0x72, 0x8d, 0x9a, 0x43, 0xc7, 0x78, 0x3f,
	0xe0, 0xe1, 0xc5, 0x37, 0xa9, 0x30, 0x90, 0x5f, 0x0b, 0x69, 0x90, 0x3f, 0x03, 0x57, 0x5a, 0x7c,
	0x55, 0x66, 0x52, 0xb0, 0x19, 0x9b, 0xbb, 0x41, 0x47, 0x70, 0x0e, 0x87, 0x91, 0x5e, 0x97, 0xe2,
	0x80, 0x12, 0x14, 0xf3, 0x29, 0x38, 0xd7, 0x69, 0x22, 0x15, 0x5e, 0xae, 0xc5, 0x80, 0xf8, 0x16,
	0xf3, 0xe7, 0x00, 0x55, 0x4c, 0xed, 0x0e, 0x29, 0xdb, 0x63, 0xbc, 0xef, 0x00, 0xf5, 0xe9, 0x59,
	0x5a, 0xde, 0xf3, 0xd9, 0x2f, 0x61, 0xe2, 0x6b, 0x34, 0x8d, 0xf1, 0x53, 0x18, 0xa5, 0x7a, 0x9b,
	0x28, 0x23, 0xd8, 0x6c, 0x30, 0x77, 0x83, 0x1a, 0x79, 0x6f, 0xc0, 0xad, 0xca, 0xac, 0xc2, 0x25,
	0x38, 0x91, 0x46, 0x73, 0xa9, 0x36, 0x9a, 0xca, 0x26, 0xe7, 0x27, 0x8b, 0xde, 0x78, 0xfd, 0x3a,
	0x17, 0xb4, 0x55, 0xde, 0x6f, 0x06, 0x4e, 0x43, 0xdf, 0x92, 0xcb, 0xfe, 0x29, 0xf7, 0x60, 0x5f,
	0xae, 0xb5, 0xaf, 0xc2, 0x1b, 0x59, 0xdb, 0xa4, 0x98, 0x0b, 0x18, 0x1b, 0x0c, 0x73, 0x7c, 0x8b,
	0xe4, 0x6f, 0x10, 0x34, 0xd0, 0x9e, 0x94, 0x86, 0x06, 0x57, 0x89, 0xda, 0x8a, 0x21, 0xa5, 0x5a,
	0xcc, 0x4f, 0x60, 0x48, 0xde, 0xc4, 0x88, 0x5a, 0x55, 0xc0, 0x0e, 0x9f, 0x02, 0xf2, 0x36, 0xae,
	0x86, 0xdf, 0x12, 0x76, 0x3a, 0x06, 0x43, 0x2c, 0x8c, 0x70, 0x66, 0x6c, 0x3e, 0x0c, 0x6a, 0x64,
	0x55, 0x6f, 0x92, 0x14, 0x65, 0x4e, 0x9f, 0xb9, 0x95, 0xea, 0x8e, 0xf1, 0x7e, 0x32, 0x38, 0xfa,
	0x64, 0xbb, 0xf8, 0xba, 0x5d, 0xb1, 0xff, 0x99, 0x42, 0xab, 0x7d, 0xd0, 0xd7, 0x3e, 0x05, 0x27,
	0x0b, 0x8d, 0xd9, 0xe9, 0x7c, 0x5d, 0x5f, 0x74, 0x8b, 0xad, 0x2f, 0xa5, 0x31, 0xd9, 0x94, 0x9f,
	0xf3, 0x94, 0x46, 0xe1, 0x06, 0x1d, 0x71, 0xdb, 0xf5, 0x68, 0xcf, 0xb5, 0xf7, 0x02, 0x1e, 0x75,
	0xe2, 0xed, 0xfd, 0x1f, 0xc3, 0xe0, 0xc6, 0x6c, 0x6b, 0xd5, 0x36, 0x3c, 0xff, 0xc5, 0x00, 0xde,
	0xc5, 0x21, 0xfa, 0x1a, 0x3f, 0x16, 0x11, 0xbf, 0x80, 0x09, 0x2d, 0xf4, 0x55, 0xa1, 0x94, 0x4c,
	0xb9, 0xe8, 0x6f, 0x47, 0xff, 0x3f, 0x9b, 0x9e, 0xde, 0x91, 0xc9, 0xd2, 0xd2, 0x7b, 0x30, 0x67,
	0x4b, 0xc6, 0x5f, 0xc3, 0xf8, 0x83, 0xb4, 0x3d, 0x0d, 0x7f, 0xb2, 0xbf, 0x60, 0x4d, 0x87, 0xc7,
	0x7f, 0x27, 0xa8, 0x01, 0x7f, 0x0f, 0x4e, 0xa3, 0x9a, 0x9f, 0xf5, 0x8b, 0xf6, 0x2e, 0x62, 0xfa,
	0xf4, 0xee, 0x24, 0x75, 0xf1, 0x97, 0x70, 0xa6, 0x24, 0x2e, 0xe2, 0x70, 0xf7, 0x65, 0x97, 0x60,
	0xbc, 0x4b, 0xd4, 0xba, 0x57, 0xee, 0x1f, 0x75, 0xa6, 0x57, 0xf6, 0x51, 0x59, 0xb1, 0x68, 0x44,
	0xaf, 0xcb, 0xab, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x83, 0x99, 0x06, 0x71, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatBotHubClient is the client API for ChatBotHub service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatBotHubClient interface {
	// bots only use eventtunnel to communicate
	EventTunnel(ctx context.Context, opts ...grpc.CallOption) (ChatBotHub_EventTunnelClient, error)
	// below are for internal web api
	GetBots(ctx context.Context, in *BotsRequest, opts ...grpc.CallOption) (*BotsReply, error)
	LoginBot(ctx context.Context, in *LoginBotRequest, opts ...grpc.CallOption) (*LoginBotReply, error)
}

type chatBotHubClient struct {
	cc *grpc.ClientConn
}

func NewChatBotHubClient(cc *grpc.ClientConn) ChatBotHubClient {
	return &chatBotHubClient{cc}
}

func (c *chatBotHubClient) EventTunnel(ctx context.Context, opts ...grpc.CallOption) (ChatBotHub_EventTunnelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatBotHub_serviceDesc.Streams[0], "/chatbothub.ChatBotHub/EventTunnel", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatBotHubEventTunnelClient{stream}
	return x, nil
}

type ChatBotHub_EventTunnelClient interface {
	Send(*EventRequest) error
	Recv() (*EventReply, error)
	grpc.ClientStream
}

type chatBotHubEventTunnelClient struct {
	grpc.ClientStream
}

func (x *chatBotHubEventTunnelClient) Send(m *EventRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatBotHubEventTunnelClient) Recv() (*EventReply, error) {
	m := new(EventReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatBotHubClient) GetBots(ctx context.Context, in *BotsRequest, opts ...grpc.CallOption) (*BotsReply, error) {
	out := new(BotsReply)
	err := c.cc.Invoke(ctx, "/chatbothub.ChatBotHub/GetBots", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatBotHubClient) LoginBot(ctx context.Context, in *LoginBotRequest, opts ...grpc.CallOption) (*LoginBotReply, error) {
	out := new(LoginBotReply)
	err := c.cc.Invoke(ctx, "/chatbothub.ChatBotHub/LoginBot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatBotHubServer is the server API for ChatBotHub service.
type ChatBotHubServer interface {
	// bots only use eventtunnel to communicate
	EventTunnel(ChatBotHub_EventTunnelServer) error
	// below are for internal web api
	GetBots(context.Context, *BotsRequest) (*BotsReply, error)
	LoginBot(context.Context, *LoginBotRequest) (*LoginBotReply, error)
}

func RegisterChatBotHubServer(s *grpc.Server, srv ChatBotHubServer) {
	s.RegisterService(&_ChatBotHub_serviceDesc, srv)
}

func _ChatBotHub_EventTunnel_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatBotHubServer).EventTunnel(&chatBotHubEventTunnelServer{stream})
}

type ChatBotHub_EventTunnelServer interface {
	Send(*EventReply) error
	Recv() (*EventRequest, error)
	grpc.ServerStream
}

type chatBotHubEventTunnelServer struct {
	grpc.ServerStream
}

func (x *chatBotHubEventTunnelServer) Send(m *EventReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatBotHubEventTunnelServer) Recv() (*EventRequest, error) {
	m := new(EventRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ChatBotHub_GetBots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BotsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatBotHubServer).GetBots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatbothub.ChatBotHub/GetBots",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatBotHubServer).GetBots(ctx, req.(*BotsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatBotHub_LoginBot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginBotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatBotHubServer).LoginBot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatbothub.ChatBotHub/LoginBot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatBotHubServer).LoginBot(ctx, req.(*LoginBotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatBotHub_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chatbothub.ChatBotHub",
	HandlerType: (*ChatBotHubServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBots",
			Handler:    _ChatBotHub_GetBots_Handler,
		},
		{
			MethodName: "LoginBot",
			Handler:    _ChatBotHub_LoginBot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EventTunnel",
			Handler:       _ChatBotHub_EventTunnel_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "chatbothub.proto",
}
